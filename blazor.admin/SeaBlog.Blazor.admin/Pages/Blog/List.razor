@page "/BlogList"
@inject IBlogApi blogApi
@inject ICategoryApi categoryApi

@if (blogs == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <form class="form-inline mb-2" @onsubmit="@Search">
        <div class="form-group mb-2">
            <input type="text" class="form-control" id="KeyWord" placeholder="关键字" @bind="@searchParameters.KeyWord" />
        </div>
        <div class="form-group mx-sm-3 mb-2">
            @if (categorys == null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                <select class="form-control" id="CategoryId" @bind="@searchParameters.CategoryId">
                    <option value="">分类</option>
                    @foreach (var category in categorys.Result.Items)
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                </select>
            }
        </div>
        <button type="submit" class="btn btn-primary mb-2">查询</button>
        <a class="btn btn-info mx-sm-3 mb-2" href="BlogOper">新增</a>
    </form>
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>标题</th>
                <th>分类</th>
                <th>创建时间</th>
                <th>操作</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var blog in blogs.Result.Items)
            {
                <tr>
                    <td><a href="BlogDetail/@blog.Id">@blog.Title</a></td>
                    <td>@string.Join(",", blog.BlogCategories.Select(c => c.Category.Name))</td>
                    <td>@blog.CreationTime.ToString("yyyy年MM月dd日")</td>
                    <td>
                        <a class="btn btn-primary" href="BlogOper/@blog.Id">编辑</a>
                        <SeaBlog.Blazor.Admin.Components.ConfirmButton BtnType="danger" Title="删除确认" Content="您确定要删除这篇博客吗？" BtnText="删除"></SeaBlog.Blazor.Admin.Components.ConfirmButton>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <nav aria-label="...">
        <ul class="pagination">
            <li class="page-item @(searchParameters.PageIndex == 1 ? "disabled" : "")">
                <a class="page-link" href="javascript:void(0)" @onclick="@(async ()=>await GetPage(searchParameters.PageIndex-1))">Previous</a>
            </li>

            @for (int i = 1; i <= pageCount; i++)
            {
                var showPageIndex = i;
                <li class="page-item @(searchParameters.PageIndex == i ? "active" : "")">
                    <a class="page-link" href="javascript:void(0)" @onclick="@(async ()=>await GetPage(showPageIndex))">@i</a>
                </li>
            }

            <li class="page-item @(searchParameters.PageIndex == pageCount ? "disabled" : "")">
                <a class="page-link" href="javascript:void(0)" @onclick="@(async ()=>await GetPage(searchParameters.PageIndex+1))">Next</a>
            </li>
        </ul>
    </nav>
}

@code {
    private BlogSearchParameters searchParameters { get; set; } = new BlogSearchParameters();
    ListResult<BlogDetail> blogs;
    ListResult<CategoryDetail> categorys;
    int pageCount;

    protected override async Task OnInitAsync()
    {
        categorys = await categoryApi.GetListAsync();
        await GetPage(1);
    }

    async Task GetPage(int index)
    {
        searchParameters.PageIndex = index;
        await Search();
    }

    async Task Search()
    {
        blogs = await blogApi.GetPageAsync(searchParameters);
        pageCount = Util.GetPageCount(blogs.Result.TotalCount);
    }
}
